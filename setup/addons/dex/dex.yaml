apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - name: dex
    port: 443
    protocol: TCP
    targetPort: 443
    nodePort: 30443
  selector:
    app: dex
---
apiVersion: v1
kind: Secret
metadata:
  name: dex.tls
  namespace: kube-system
data:
  tls.ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lVZFB1b2xaN3VKeFp1a1dKdElheU5EUjRBNjN3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUF4TVBkbUZuY21GdWRDOXdhMmt2WkdWNE1CNFhEVEUyTVRJeE56QXhNRGMxTUZvWApEVEkyTVRJeE5UQXhNRGd5TUZvd0dqRVlNQllHQTFVRUF4TVBkbUZuY21GdWRDOXdhMmt2WkdWNE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTdST3o3M0RQbDNtY3hmb2R0UzB5YWhmdmI3NEUKSDc1QkVDZ0xQemtDRXY2UmtZQlYyQUJiWnBrZ2VBQ2QvdUp5dGExaWNRT2JWZmRYVHhqZjRORjlmUitXQ1lSegowY0g1VEc5U1RQOUNBUWJQeGZML1ArV2F5cEw0MHUwVWVybTdtL0ZHdW1yU1hndmJWVTVGRU0zUTZ0WDZjVXlTCnVLMDcrZEk3SmpjWXhER2pvVG9NNUUvakc2b21xTVV0c3IyZXZrVlNob2x5K0VtalFWYVJHcDM2QmJTcnJ5U3oKNlpBRElIT2xnWW1mdkhjMEd2Nk1XRzI2Z29EeTZpUkZoWkk4L1dzRUxEb3pFNW9BaVNrS0Y2elpuR2UwRmw2aAp2VnpidkYzSFJhTTByWW5BeWhwaGdXSlNKZlRnUVhJc2tJOHBTNFFPRmZzR1dPSjB4MVZkalJBbGZ3SURBUUFCCm8xNHdYREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKUnhGcHFQbkY2V0pTYis2dUN5M3lsYVVoN0Nvd0dnWURWUjBSQkJNd0VZSVBkbUZuY21GdWRDOXdhMmt2WkdWNApNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURTOTFnZDYwRFVUTWE5M3hIVm11bkhsWjN1QmFXY0UzdFhjNHdTCjNOMS8rYU1IRHBwZENsMzlQYWFIZFdCYUNKZis2RVlZa3lrb3djWVBxN2JDdHBXZndhYWR0NzduUFRuWXNWZ24KdlFGRDZPbzdnc3gxdktHMHIwbCtvdGJhQjhmR1U5S0FWaWxiK0NmZWdJNituNzNQeVBvMlk4WEpKd2g5OEovRgpENVYzWmJjOE10WWQzVEZOaGFPaDA5OWVpckJ6M3laYmZULzlWMG5ZRWhLalFLeENZUm9mWXBiRy9vcDdvRDRtCnZINTZLanFmUjg5TWlkZk9CZ3ByUW5BUU1RN1MxWC9VZEc0NEVRTnJoYml1bEZnWlBlMkhaSWw2MURNTXY3NU0KSnRBWktKNXA2YzFHL1F4SUgwTkp4OG9qemRWb3U2SEorK3R4VU1kQVZEbWkrMzRDCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lVTHJXVVpVaDcweEFYbHBTWVVub1RYKytVanUwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUF4TVBkbUZuY21GdWRDOXdhMmt2WkdWNE1CNFhEVEUyTVRJeE56QXhNRGMxTkZvWApEVEUzTURFeE5qQXhNRGd5TkZvd0ZURVRNQkVHQTFVRUF4TUtLaTVzYjJOaGJDNXBiekNDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHlnWGx1Mjd3TjdCeHZaanV5TVdMenZ4ME1LcDc0K1Y0OFQKNXZDTDRtTk5PL2FxWEpmMUtkQWFzb09vRURJQlAxNHhMTytPclFTaUlTc1VFZnlSMDJPNkhCdlE3UDd3UnN6TAoyc2pXa1FkeUZ6ZGg2d1dyOWtKdys2Y1Njc2ZZQ3g2aGZBd3lManU2RlpuamFhUXFHcS9mY01LeW9BWVFoMXp4CnpSVEEvTGdkWVpQRkNqc2YrWitrS2dlaUtjM2dMWGNrQ1lnRkZrVyt3bkRhZ0x6Q0dKUkFyY0dRZTZZTlA5dGUKbUlHTWNlRDQyY2oydlBIa3pmLzk4ZkVoN3lqcG1vVlh4V0JMYjQ5R3VXY0FlcnZCU3ZSb2Y0bGNWWDBMWXNuaQpMSWZGOERYanBEK0xoUkFWNjc2cTFLaXJLYnNSYURLd0hDSjF2SEVqMTk1ZXlNWVY1OWNDQXdFQUFhT0JsRENCCmtUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUIwR0ExVWREZ1FXQkJTMTJYSk8yZXphcElSUk0vM3F0VzVXQVdvcmZ6QWZCZ05WSFNNRUdEQVdnQlJIRVdtbworY1hwWWxKdjdxNExMZktWcFNIc0tqQWdCZ05WSFJFRUdUQVhnZ29xTG14dlkyRnNMbWx2Z2dsc2IyTmhiR2h2CmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSDl0RXJDVkZxbEgrVzZjUWJrM0VOSzQwQjJGc2RRVkxwWVoKWUpXbDVkVXp5WGY2dWJaRFA4S2JWajJJa0VEZHBFWjBzZGN1YkhwZldMNmkzWXUyVXdxVXhqd0VIbFd5STRoMApRVmNlNmh5bldxWmFrdnZNblVzeVg0SnFGNEQvZFV5NHI3akQxWW9wNENVRlJ3N2NCeTJ2RU02TXJOckFwMFhLClhBcmx0STdmcTFKV0Y3d0lzU1dkMWQ3bFJKdkdHQjZpaXQ4dUZUeFMyVGpTS2hGbkVHTEttVHljbElxL1ZvOHcKZEFZWWtIaTlRR1llYXl6L3ZRSzJLZDBaNUtZdEFaK1lvYTgvOWpVdlhZUVdSWm5HUlIvYlMzNUV5Y0hJcmpWUgpPcTY3K0cwOU4xa3lxbU54bFc5T3JiUFFqNFlZeS9YTndsZmlxOVZiU0JQbFp0SGdSdkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdktCZVc3YnZBM3NIRzltTzdJeFl2Ty9IUXdxbnZqNVhqeFBtOEl2aVkwMDc5cXBjCmwvVXAwQnF5ZzZnUU1nRS9YakVzNzQ2dEJLSWhLeFFSL0pIVFk3b2NHOURzL3ZCR3pNdmF5TmFSQjNJWE4ySHIKQmF2MlFuRDdweEp5eDlnTEhxRjhEREl1TzdvVm1lTnBwQ29hcjk5d3dyS2dCaENIWFBITkZNRDh1QjFoazhVSwpPeC81bjZRcUI2SXB6ZUF0ZHlRSmlBVVdSYjdDY05xQXZNSVlsRUN0d1pCN3BnMC8yMTZZZ1l4eDRQalp5UGE4CjhlVE4vLzN4OFNIdktPbWFoVmZGWUV0dmowYTVad0I2dThGSzlHaC9pVnhWZlF0aXllSXNoOFh3TmVPa1A0dUYKRUJYcnZxclVxS3NwdXhGb01yQWNJblc4Y1NQWDNsN0l4aFhuMXdJREFRQUJBb0lCQUZDNVZRaHRGb2Juek5nSApXRm8xaWZoNXFVNHdyaThGb1JVelVEOGJybXdPN3AyV3RQKzNSUWl4bERveDM1UjI0amFlVnZ2Q2xKc0tBNlhhCjlnT2dLTlppSEl0dTh5MzdpR0UyME0vb3U3SnpDaXFDZGtFOElheTNpNHNwb3dPUm10aW1CVjkyemtCelY3RS8KR01QUDNSSHRUdVdUNmxZT0Z0QVpEMHBWZVJJVmk3SEU5bXN1TnRmbmNEZ2hBaGRxN3ZKTURqNEJEQ3IxaXBIUgpva3REbUd6TnBtdVQ0ckk2ckR1KzJ3Y1RsdUM4SlRQS2Urdlp0amsrWW9WUitkck84MTNuNGJheXpTaE5WSXRHCjA5MDl5c0x0OWZOcTZ2SXVRK05NOWV0V2JFaG5XUURiSmRNS3YwQXEyRzBWUENTWUpRQi9yTVl6ZXdVTlh0OGMKMkNpeEJORUNnWUVBOU1FZlV2WG4rNStuWFBDSnNpNUh4eVRla3c1S213TGJSbXNPYlByeS9pam4vZmlCa25tSgo0dkRNb1pJc0p4ZURjY1MvaW1EQnd0dlFoekIyQzlDZlBpY0pCbHlpUTJjdXlxZ1RoT2lCWjhCa3cvUmVwSUc4CkRzVEI2N3lQRTRscHlPYit0VDRtUjIwakFESTdhL1RCY2xuNmhrRS9mWTAyTWM3bHJaZzY2YjhDZ1lFQXhVc04KUWNlSk1NWjlsdXdYKzBRWGJ2UXo4NFd1MEo4M1h1NE4raG01OTNkaWpTNUorUDJvZXZ6YUVLZzJWVkV4cVkyQgplSTNJQTVEYzBGcWFVT0xyMS9UZmg5VkN4L1owR0VDV2g4UEZ1OUlHSGJvWWVqS0M0NWRMdFJFWGN0QnNjZHRyClZielBUT0wzeGhRTGRIdHJGUG1FUWYxYjRHRUVnNHQ1SmpwSkYra0NnWUVBek9qeXBLNGo3bElYK0lPWmhJZWkKcUdPQnhIUnVtYUNtbkNuOUJkaURuNjMzckhWbFpaQkRsTEF0WWdmUzExZWtRSmVNRlBvMHZrTHlMbnl3Rit3dApwZ2RnVXVjekltTThsWVpwOFJnSFh5bUFNMTVmN2pKL2s0Mi9IUEhjaDJyQUdlYnEwQ3FjT2FoeGFUU2s4eGtTCjYvM1E5SjJqM2lWZmZndk4xcXhnaGxrQ2dZRUFoVG5FRHZwT0F2aldUL2JIenUzUklTU1lmRVoyb1B3UzZQQzUKMFh4VDN1N29Sc3ZPT2V3WVBFekllRjBPcTVnemYvcEZSb0gvWWFFTjYwaHpVbEdaenUvVmppVU5mbmhITnlWTwpRUW1MV2VSZUt1N0NucW5EUnlxZ2ZmbTNxdGxoa1pVSXF4SGZybHpKMGlFeEJ3eGNhQUtDTkFtQlpFZy9ReEVJCjB5NmlzeGtDZ1lCNGZJTUdsVDI5WUdhSWFIcHo4NkxMckU4eTdIczYyNzhOQTIxdlJJa242MG5MQU9oYlNkWlQKL2xzVjg5c3ZtRjM1STBOdkE1LzlLZ0g4T211NG9UbU5OVmJjSXNVV3U1WHB1U2FlNnF3MjVpaDlBa2x3Qkk0UwoyVmhIKzNsajB3d25WUFFJbVJVSGFBZjRNNEpySUZJS2pzcU5seXZCQS80K2I0S2orMXJxS0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: dex.github
  namespace: kube-system
type: Opaque
data:
  client-id: NTQ3YjRhYjA3M2I0ZTM5OGQ0ZjA=
  client-secret: ZmQ2MTQxNzQzYmM0YThlZWM5M2VhNTA1N2M5ZjM3ZjNiMjhjOTU4Yw==
---
apiVersion: v1
kind: Secret
metadata:
  name: dex.google
  namespace: kube-system
type: Opaque
data:
  client-id: ODc2MDc2NjM5NDQ0LW8zdTIzZjY5ZGlsdXMxYTBkNzd0ZHQxb3FzMWZpaDViLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29t
  client-secret: T0pMc0FLeUpsY2ZjaUtnbkhzaHVwZjQ4
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  namespace: kube-system
data:
  config.yaml: |
    issuer: https://kube-1.local.io:30443

    storage:
      type: kubernetes
      config:
        inCluster: true

    web:
      https: 0.0.0.0:443
      tlsCert: /etc/dex/tls/tls.crt
      tlsKey: /etc/dex/tls/tls.key

    logger:
      level: "debug"
      format: "text"

    connectors:
    - type: mockCallback
      id: mock
      name: Example
    - type: oidc
      id: google
      name: Google
      config:
        issuer: https://accounts.google.com
        clientID: $GOOGLE_CLIENT_ID
        clientSecret: $GOOGLE_CLIENT_SECRET
        redirectURI: https://kube-1.local.io:30443/callback
    - type: github
      id: github
      name: GitHub
      config:
        clientID: $GITHUB_CLIENT_ID
        clientSecret: $GITHUB_CLIENT_SECRET
        redirectURI: https://kube-1.local.io:30443/callback
    - type: ldap
      id: ldap
      config:
        host: openldap.kube-system.svc.cluster.io:389
        insecureNoSSL: true
        bindDN: cn=admin,dc=local,dc=io
        bindPW: admin
        userSearch:
          baseDN: ou=users,dc=local,dc=io
          filter: "(objectClass=posixAccount)"
          username: uid
          idAttr: uid
          emailAttr: mail
          nameAttr: uid
        groupSearch:
          baseDN: ou=groups,dc=local,dc=io
          filter: "(objectClass=posixGroup)"
          userAttr: uid
          groupAttr: memberUid
          nameAttr: cn

    oauth2:
      skipApprovalScreen: true

    staticClients:
    - id: example-app
      redirectURIs:
        - 'http://kube-1.local.io:30080/callback'
      name: 'Example App'
      secret: ZXhhbXBsZS1hcHAtc2VjcmV0

    enablePasswordDB: true
    staticPasswords:
    - email: "admin@example.com"
      hash: "$2a$10$33EMT0cVYVlPy6WAMCLsceLYjWhuHpbz5yuZxu/GAFj03J9Lytjuy"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dex
  namespace: kube-system
  labels:
    app: dex
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - name: dex
        image: quay.io/coreos/dex:v2.0.0
        imagePullPolicy: Always
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
        ports:
        - name: https
          containerPort: 443

        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        - name: tls
          mountPath: /etc/dex/tls

        env:
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dex.github
              key: client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dex.github
              key: client-secret
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dex.google
              key: client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dex.google
              key: client-secret

      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        secret:
          secretName: dex.tls
---
apiVersion: v1
kind: Service
metadata:
  name: dex-app
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - name: dex-app
    port: 80
    protocol: TCP
    targetPort: 80
    nodePort: 30080
  selector:
    app: dex-app
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dex-app
  namespace: kube-system
  labels:
    app: dex-app
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dex-app
    spec:
      containers:
      - name: dex-app
        image: quay.io/keyolk/dex-app:0.0.1
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80

        volumeMounts:
        - name: tls
          mountPath: /etc/dex/tls

        env:
        - name: DEX_ISSUER
          value: https://kube-1.local.io:30443
        - name: DEX_CA
          value: /etc/dex/tls/tls.ca
        - name: DEX_CERT
          value: /etc/dex/tls/tls.cert
        - name: DEX_KEY
          value: /etc/dex/tls/tls.key
        - name: DEX_APP_CLIENT_ID
          value: example-app
        - name: DEX_APP_LISTEN_ADDRESS
          value: http://0.0.0.0:80
        - name: DEX_APP_REDIRECT_URI
          value: http://kube-1.local.io:30080/callback

      volumes:
      - name: tls
        secret:
          secretName: dex.tls
